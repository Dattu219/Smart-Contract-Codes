/**

 *Submitted for verification at Etherscan.io on 2018-10-28

*/



pragma solidity ^0.4.25;



/**

  Gradual.pro - §±§Ý§Ñ§Ó§ß§à §â§Ñ§ã§ä§å§ë§Ú§Û §Ú §Õ§à§Ý§Ô§à §Ø§Ú§Ó§å§ë§Ú§Û §å§Þ§ß§à§Ø§Ú§ä§Ö§Ý§î §¢§¦§© §¬§ª§´§°§£!, §Ü§à§ä§à§â§í§Û §Ó§à§Ù§Ó§â§Ñ§ë§Ñ§Ö§ä 121% §à§ä §Ó§Ñ§ê§Ö§Ô§à §Õ§Ö§á§à§Ù§Ú§ä§Ñ!



  §®§Ñ§Ý§Ö§ß§î§Ü§Ú§Û §Ý§Ú§Þ§Ú§ä §ß§Ñ §Õ§Ö§á§à§Ù§Ú§ä §Ú§Ù§Ò§Ñ§Ó§Ý§ñ§Ö§ä §à§ä §á§â§à§Ò§Ý§Ö§Þ §ã §¬§ª§´§¡§®§ª, §Ü§à§ä§à§â§í§Ö §à§é§Ö§ß§î §ã§Ú§Ý§î§ß§à §ä§à§â§Þ§à§Ù§Ú§Ý§Ú §á§â§Ö§Õ§í§Õ§å§ë§å§ð §Ó§Ö§â§ã§Ú§ð §Ü§à§ß§ä§â§Ñ§Ü§ä§Ñ §Ú §Ù§ß§Ñ§é§Ú§ä§Ö§Ý§î§ß§à §á§â§à§Õ§Ý§Ö§Ó§Ñ§Ö§ä §ã§â§à§Ü §Ö§Ô§à §Ø§Ú§Ù§ß§Ú!



  §¡§Ó§ä§à§Þ§Ñ§ä§Ú§é§Ö§ã§Ü§Ú§Ö §Ó§í§á§Ý§Ñ§ä§í!

  §±§à§Ý§ß§í§Ö §à§ä§é§Ö§ä§í §à §á§à§ä§â§Ñ§é§Ö§ß§í§ç §ß§Ñ §â§Ö§Ü§Ý§Ñ§Þ§å §ã§â§Ö§Õ§ã§ä§Ó§Ñ§ç §Ó §Ô§â§å§á§á§Ö!

  §¢§Ö§Ù §à§ê§Ú§Ò§à§Ü, §Õ§í§â, §Ñ§Ó§ä§à§Þ§Ñ§ä§Ú§é§Ö§ã§Ü§Ú§Û - §Õ§Ý§ñ §Ó§í§á§Ý§Ñ§ä §¯§¦ §¯§µ§¨§¯§¡ §Ñ§Õ§Þ§Ú§ß§Ú§ã§ä§â§Ñ§è§Ú§ñ!

  §³§à§Ù§Õ§Ñ§ß §Ú §á§â§à§Ó§Ö§â§Ö§ß §á§â§à§æ§Ö§ã§ã§Ú§à§ß§Ñ§Ý§Ñ§Þ§Ú!

  §¬§à§Õ §á§à§Ý§ß§à§ã§ä§î§ð §Õ§à§Ü§å§Þ§Ö§ß§ä§Ú§â§à§Ó§Ñ§ß §ß§Ñ §â§å§ã§ã§Ü§à§Þ §ñ§Ù§í§Ü§Ö, §Ü§Ñ§Ø§Õ§Ñ§ñ §ã§ä§â§à§é§Ü§Ñ §á§à§ß§ñ§ä§ß§Ñ!



  §£§Ö§Ò§ã§Ñ§Û§ä: http://gradual.pro/

  §¤§â§å§á§á§Ñ §Ó §ä§Ö§Ý§Ö§Ô§â§Ñ§Þ§Þ§Ö: https://t.me/gradualpro



  1. §±§à§ê§Ý§Ú§ä§Ö §Ý§ð§Ò§å§ð §ß§Ö§ß§å§Ý§Ö§Ó§å§ð §ã§å§Þ§Þ§å §ß§Ñ §Ñ§Õ§â§Ö§ã §Ü§à§ß§ä§â§Ñ§Ü§ä§Ñ

     - §ã§å§Þ§Þ§Ñ §à§ä 0.01 §Õ§à 2 ETH

     - gas limit §Þ§Ú§ß§Ú§Þ§å§Þ 250000

     - §Ó§í §Ó§ã§ä§Ñ§ß§Ö§ä§Ö §Ó §à§é§Ö§â§Ö§Õ§î

  2. §¯§Ö§Þ§ß§à§Ô§à §á§à§Õ§à§Ø§Õ§Ú§ä§Ö

  3. ...

  4. PROFIT! §£§Ñ§Þ §á§â§Ú§ê§Ý§à 121% §à§ä §Ó§Ñ§ê§Ö§Ô§à §Õ§Ö§á§à§Ù§Ú§ä§Ñ.



  §¬§Ñ§Ü §ï§ä§à §Ó§à§Ù§Þ§à§Ø§ß§à?

  1. §±§Ö§â§Ó§í§Û §Ú§ß§Ó§Ö§ã§ä§à§â §Ó §à§é§Ö§â§Ö§Õ§Ú (§Ó§í §ã§ä§Ñ§ß§Ö§ä§Ö §á§Ö§â§Ó§í§Þ §à§é§Ö§ß§î §ã§Ü§à§â§à) §á§à§Ý§å§é§Ñ§Ö§ä §Ó§í§á§Ý§Ñ§ä§í §à§ä

     §ß§à§Ó§í§ç §Ú§ß§Ó§Ö§ã§ä§à§â§à§Ó §Õ§à §ä§Ö§ç §á§à§â, §á§à§Ü§Ñ §ß§Ö §á§à§Ý§å§é§Ú§ä 121% §à§ä §ã§Ó§à§Ö§Ô§à §Õ§Ö§á§à§Ù§Ú§ä§Ñ

  2. §£§í§á§Ý§Ñ§ä§í §Þ§à§Ô§å§ä §á§â§Ú§ç§à§Õ§Ú§ä§î §ß§Ö§ã§Ü§à§Ý§î§Ü§Ú§Þ§Ú §é§Ñ§ã§ä§ñ§Þ§Ú §Ú§Ý§Ú §Ó§ã§Ö §ã§â§Ñ§Ù§å

  3. §¬§Ñ§Ü §ä§à§Ý§î§Ü§à §Ó§í §á§à§Ý§å§é§Ñ§Ö§ä§Ö 121% §à§ä §Ó§Ñ§ê§Ö§Ô§à §Õ§Ö§á§à§Ù§Ú§ä§Ñ, §Ó§í §å§Õ§Ñ§Ý§ñ§Ö§ä§Ö§ã§î §Ú§Ù §à§é§Ö§â§Ö§Õ§Ú

  4. §£§í §Þ§à§Ø§Ö§ä§Ö §Õ§Ö§Ý§Ñ§ä§î §ß§Ö§ã§Ü§à§Ý§î§Ü§à §Õ§Ö§á§à§Ù§Ú§ä§à§Ó §ã§â§Ñ§Ù§å

  5. §¢§Ñ§Ý§Ñ§ß§ã §ï§ä§à§Ô§à §Ü§à§ß§ä§â§Ñ§Ü§ä§Ñ §Õ§à§Ý§Ø§Ö§ß §à§Ò§í§é§ß§à §Ò§í§ä§î §Ó §â§Ñ§Û§à§ß§Ö 0, §á§à§ä§à§Þ§å §é§ä§à §Ó§ã§Ö §á§à§ã§ä§å§á§Ý§Ö§ß§Ú§ñ

     §ã§â§Ñ§Ù§å §Ø§Ö §ß§Ñ§á§â§Ñ§Ó§Ý§ñ§ð§ä§ã§ñ §ß§Ñ §Ó§í§á§Ý§Ñ§ä§í



     §´§Ñ§Ü§Ú§Þ §à§Ò§â§Ñ§Ù§à§Þ, §á§à§ã§Ý§Ö§Õ§ß§Ú§Ö §á§Ý§Ñ§ä§ñ§ä §á§Ö§â§Ó§í§Þ, §Ú §Ú§ß§Ó§Ö§ã§ä§à§â§í, §Õ§à§ã§ä§Ú§Ô§ê§Ú§Ö §Ó§í§á§Ý§Ñ§ä 121% §à§ä §Õ§Ö§á§à§Ù§Ú§ä§Ñ,

     §å§Õ§Ñ§Ý§ñ§ð§ä§ã§ñ §Ú§Ù §à§é§Ö§â§Ö§Õ§Ú, §å§ã§ä§å§á§Ñ§ñ §Þ§Ö§ã§ä§à §à§ã§ä§Ñ§Ý§î§ß§í§Þ



              §ß§à§Ó§í§Û §Ú§ß§Ó§Ö§ã§ä§à§â --|            §ã§à§Ó§ã§Ö§Þ §ß§à§Ó§í§Û §Ú§ß§Ó§Ö§ã§ä§à§â --|

                 §Ú§ß§Ó§Ö§ã§ä§à§â5     |                §ß§à§Ó§í§Û §Ú§ß§Ó§Ö§ã§ä§à§â      |

                 §Ú§ß§Ó§Ö§ã§ä§à§â4     |     =======>      §Ú§ß§Ó§Ö§ã§ä§à§â5        |

                 §Ú§ß§Ó§Ö§ã§ä§à§â3     |                   §Ú§ß§Ó§Ö§ã§ä§à§â4        |

 (§é§Ñ§ã§ä. §Ó§í§á§Ý§Ñ§ä§Ñ) §Ú§ß§Ó§Ö§ã§ä§à§â2    <|                   §Ú§ß§Ó§Ö§ã§ä§à§â3        |

(§á§à§Ý§ß§Ñ§ñ §Ó§í§á§Ý§Ñ§ä§Ñ) §Ú§ß§Ó§Ö§ã§ä§à§â1   <-|                   §Ú§ß§Ó§Ö§ã§ä§à§â2   <----|  (§Õ§à§á§Ý§Ñ§ä§Ñ §Õ§à 121%)



*/



contract GradualPro {

    // §¡§Õ§â§Ö§ã §Ü§à§ê§Ö§Ý§î§Ü§Ñ §á§Ö§â§Ó§à§Ô§à §á§â§à§Ö§Ü§ä§Ñ §Õ§Ý§ñ §á§â§à§Õ§Ó§Ú§Ø§Ö§ß§Ú§ñ §à§é§Ö§â§Ö§Õ§Ú

    address constant private FIRST_SUPPORT = 0xf8F04b23dACE12841343ecf0E06124354515cc42;



    // §¡§Õ§â§Ö§ã §Ü§à§ê§Ö§Ý§î§Ü§Ñ §Õ§Ý§ñ §à§á§Ý§Ñ§ä§í §ä§Ö§ç§ß§Ú§é§Ö§ã§Ü§à§Û §á§à§Õ§Õ§Ö§â§Ø§Ü§Ú §Ú§ß§æ§à§â§Þ§Ñ§è§Ú§à§ß§ß§í§ç §Ü§Ñ§ß§Ñ§Ý§à§Ó

    address constant private TECH_SUPPORT = 0x988f1a2fb17414c95f45E2DAaaA40509F5C9088c;



    // §±§â§à§è§Ö§ß§ä §Õ§Ö§á§à§Ù§Ú§ä§Ñ §ß§Ñ §á§Ö§â§Ó§í§Û §á§â§à§Ö§Ü§ä 4%

    uint constant public FIRST_PERCENT = 4;



    // §±§â§à§è§Ö§ß§ä §Õ§Ö§á§à§Ù§Ú§ä§Ñ §ß§Ñ §ä§Ö§ç §á§à§Õ§Õ§Ö§â§Ø§Ü§å 1%

    uint constant public TECH_PERCENT = 1;

    

    // §±§â§à§è§Ö§ß§ä §Ó§í§á§Ý§Ñ§ä §Ó§ã§Ö§Þ §å§é§Ñ§ã§ä§ß§Ú§Ü§Ñ§Þ

    uint constant public MULTIPLIER = 121;



    // §®§Ñ§Ü§ã§Ú§Þ§Ñ§Ý§î§ß§Ñ§ñ §ã§å§Þ§Þ§Ñ §Õ§Ö§á§à§Ù§Ú§ä§Ñ = 2 §ï§æ§Ú§â§Ñ, §é§ä§à§Ò§í §Ü§Ñ§Ø§Õ§í§Û §ã§Þ§à§Ô §å§é§Ñ§Ó§ã§ä§à§Ó§Ñ§ä§î §Ú §Ü§Ú§ä§í §ß§Ö §ä§à§â§Þ§à§Ù§Ú§Ý§Ú §Ú §ß§Ö §á§å§Ô§Ñ§Ý§Ú §Ó§Ü§Ý§Ñ§Õ§é§Ú§Ü§à§Ó

    uint constant public MAX_LIMIT = 2 ether;



    // §³§ä§â§å§Ü§ä§å§â§Ñ Deposit §ã§à§Õ§Ö§â§Ø§Ú§ä §Ú§ß§æ§à§â§Þ§Ñ§è§Ú§ð §à §Õ§Ö§á§à§Ù§Ú§ä§Ö

    struct Deposit {

        address depositor; // §£§Ý§Ñ§Õ§Ö§Ý§Ö§è §Õ§Ö§á§à§Ù§Ú§ä§Ñ

        uint128 deposit;   // §³§å§Þ§Þ§Ñ §Õ§Ö§á§à§Ù§Ú§ä§Ñ

        uint128 expect;    // §³§å§Þ§Þ§Ñ §Ó§í§á§Ý§Ñ§ä§í (§Þ§à§Þ§Ö§ß§ä§Ñ§Ý§î§ß§à 121% §à§ä §Õ§Ö§á§à§Ù§Ú§ä§Ñ)

    }



    // §°§é§Ö§â§Ö§Õ§î

    Deposit[] private queue;



    // §¯§à§Þ§Ö§â §à§Ò§â§Ñ§Ò§Ñ§ä§í§Ó§Ñ§Ö§Þ§à§Ô§à §Õ§Ö§á§à§Ù§Ú§ä§Ñ, §Þ§à§Ø§ß§à §ã§Ý§Ö§Õ§Ú§ä§î §Ó §â§Ñ§Ù§Õ§Ö§Ý§Ö Read contract

    uint public currentReceiverIndex = 0;



    // §¥§Ñ§ß§ß§Ñ§ñ §æ§å§ß§Ü§è§Ú§ñ §á§à§Ý§å§é§Ñ§Ö§ä §Ó§ã§Ö §Õ§Ö§á§à§Ù§Ú§ä§í, §ã§à§ç§â§Ñ§ß§ñ§Ö§ä §Ú§ç §Ú §á§â§à§Ú§Ù§Ó§à§Õ§Ú§ä §Þ§à§Þ§Ö§ß§ä§Ñ§Ý§î§ß§í§Ö §Ó§í§á§Ý§Ñ§ä§í

    function () public payable {

        // §¦§ã§Ý§Ú §ã§å§Þ§Þ§Ñ §Õ§Ö§á§à§Ù§Ú§ä§Ñ §Ò§à§Ý§î§ê§Ö §ß§å§Ý§ñ

        if(msg.value > 0){

            // §±§â§à§Ó§Ö§â§ñ§Ö§Þ §Þ§Ú§ß§Ú§Þ§Ñ§Ý§î§ß§í§Û §Ý§Ú§Þ§Ú§ä §Ô§Ñ§Ù§Ñ 220 000, §Ú§ß§Ñ§é§Ö §à§ä§Þ§Ö§ß§ñ§Ö§Þ §Õ§Ö§á§à§Ù§Ú§ä §Ú §Ó§à§Ù§Ó§â§Ñ§ë§Ñ§Ö§Þ §Õ§Ö§ß§î§Ô§Ú §Ó§Ü§Ý§Ñ§Õ§é§Ú§Ü§å

            require(gasleft() >= 220000, "We require more gas!");



            // §±§â§à§Ó§Ö§â§ñ§Ö§Þ §Þ§Ñ§Ü§ã§Ú§Þ§Ñ§Ý§î§ß§å§ð §ã§å§Þ§Þ§å §Ó§Ü§Ý§Ñ§Õ§Ñ

            require(msg.value <= MAX_LIMIT, "Deposit is too big");



            // §¥§à§Ò§Ñ§Ó§Ý§ñ§Ö§Þ §Õ§Ö§á§à§Ù§Ú§ä §Ó §à§é§Ö§â§Ö§Õ§î, §Ù§Ñ§á§Ú§ã§í§Ó§Ñ§Ö§Þ §é§ä§à §Ö§Þ§å §ß§å§Ø§ß§à §Ó§í§á§Ý§Ñ§ä§Ú§ä§î 121% §à§ä §ã§å§Þ§Þ§í §Õ§Ö§á§à§Ù§Ú§ä§Ñ

            queue.push(Deposit(msg.sender, uint128(msg.value), uint128(msg.value * MULTIPLIER / 100)));



            // §°§ä§á§â§Ñ§Ó§Ý§ñ§Ö§Þ §á§â§à§è§Ö§ß§ä §ß§Ñ §á§â§à§Õ§Ó§Ú§Ø§Ö§ß§Ú§Ö §á§â§à§Ö§Ü§ä§Ñ

            uint ads = msg.value * FIRST_PERCENT / 100;

            require(FIRST_SUPPORT.call.value(ads).gas(gasleft())());



            // §°§ä§á§â§Ñ§Ó§Ý§ñ§Ö§Þ §á§â§à§è§Ö§ß§ä §ß§Ñ §ä§Ö§ç§ß§Ú§é§Ö§ã§Ü§å§ð §á§à§Õ§Õ§Ö§â§Ø§Ü§å §á§â§à§Ö§Ü§ä§Ñ

            uint tech = msg.value * TECH_PERCENT / 100;

            TECH_SUPPORT.transfer(tech);



            // §£§í§Ù§í§Ó§Ñ§Ö§Þ §æ§å§ß§Ü§è§Ú§ð §à§á§Ý§Ñ§ä§í §á§Ö§â§Ó§à§Þ§å §Ó §à§é§Ö§â§Ö§Õ§Ú §Õ§Ö§á§à§Ù§Ú§ä§å

            pay();

        }

    }



    // §¶§å§Ü§ß§è§Ú§ñ §Ú§ã§á§à§Ý§î§Ù§å§Ö§ä§ã§ñ §Õ§Ý§ñ §à§á§Ý§Ñ§ä§í §á§Ö§â§Ó§í§Þ §Ó §à§é§Ö§â§Ö§Õ§Ú §Õ§Ö§á§à§Ù§Ú§ä§Ñ§Þ

    // §¬§Ñ§Ø§Õ§Ñ§ñ §ß§à§Ó§Ñ§ñ §ä§â§Ñ§ß§Ù§Ñ§è§Ú§ñ §à§Ò§â§Ñ§Ò§Ñ§ä§í§Ó§Ñ§Ö§ä §à§ä 1 §Õ§à 4+ §Ó§Ü§Ý§Ñ§Õ§é§Ú§Ü§à§Ó §Ó §ß§Ñ§é§Ñ§Ý§Ö §à§é§Ö§â§Ö§Õ§Ú 

    // §£ §Ù§Ñ§Ó§Ú§ã§Ú§Þ§à§ã§ä§Ú §à§ä §à§ã§ä§Ñ§Ó§ê§Ö§Ô§à§ã§ñ §Ô§Ñ§Ù§Ñ

    function pay() private {

        // §±§à§á§í§ä§Ñ§Ö§Þ§ã§ñ §á§à§ã§Ý§Ñ§ä§î §Ó§ã§Ö §Õ§Ö§ß§î§Ô§Ú §Ú§Þ§Ö§ð§ë§Ú§Ö§ã§ñ §ß§Ñ §Ü§à§ß§ä§â§Ñ§Ü§ä§Ö §á§Ö§â§Ó§í§Þ §Ó §à§é§Ö§â§Ö§Õ§Ú §Ó§Ü§Ý§Ñ§Õ§é§Ú§Ü§Ñ§Þ

        uint128 money = uint128(address(this).balance);



        // §±§â§à§ç§à§Õ§Ú§Þ §á§à §Ó§ã§Ö§Û §à§é§Ö§â§Ö§Õ§Ú

        for(uint i = 0; i < queue.length; i++) {



            uint idx = currentReceiverIndex + i;  // §¥§à§ã§ä§Ñ§Ö§Þ §ß§à§Þ§Ö§â §á§Ö§â§Ó§à§Ô§à §Ó §à§é§Ö§â§Ö§Õ§Ú §Õ§Ö§á§à§Ù§Ú§ä§Ñ



            Deposit storage dep = queue[idx]; // §¥§à§ã§ä§Ñ§Ö§Þ §Ú§ß§æ§à§â§Þ§Ñ§è§Ú§ð §à §á§Ö§â§Ó§à§Þ §Õ§Ö§á§à§Ù§Ú§ä§Ö



            if(money >= dep.expect) {  // §¦§ã§Ý§Ú §å §ß§Ñ§ã §Ö§ã§ä§î §Õ§à§ã§ä§Ñ§ä§à§é§ß§à §Õ§Ö§ß§Ö§Ô §Õ§Ý§ñ §á§à§Ý§ß§à§Û §Ó§í§á§Ý§Ñ§ä§í, §ä§à §Ó§í§á§Ý§Ñ§é§Ú§Ó§Ñ§Ö§Þ §Ö§Þ§å §Ó§ã§Ö

                dep.depositor.transfer(dep.expect); // §°§ä§á§â§Ñ§Ó§Ý§ñ§Ö§Þ §Ö§Þ§å §Õ§Ö§ß§î§Ô§Ú

                money -= dep.expect; // §°§Ò§ß§à§Ó§Ý§ñ§Ö§Þ §Ü§à§Ý§Ú§é§Ö§ã§ä§Ó§à §à§ã§ä§Ñ§Ó§ê§Ú§ç§ã§ñ §Õ§Ö§ß§Ö§Ô



                // §Õ§Ö§á§à§Ù§Ú§ä §Ò§í§Ý §á§à§Ý§ß§à§ã§ä§î§ð §Ó§í§á§Ý§Ñ§é§Ö§ß, §å§Õ§Ñ§Ý§ñ§Ö§Þ §Ö§Ô§à

                delete queue[idx];

            } else {

                // §±§à§á§Ñ§Õ§Ñ§Ö§Þ §ã§ð§Õ§Ñ, §Ö§ã§Ý§Ú §å §ß§Ñ§ã §ß§Ö §Õ§à§ã§ä§Ñ§ä§à§é§ß§à §Õ§Ö§ß§Ö§Ô §Ó§í§á§Ý§Ñ§ä§Ú§ä§î §Ó§ã§Ö, §Ñ §Ý§Ú§ê§î §é§Ñ§ã§ä§î

                dep.depositor.transfer(money); // §°§ä§á§â§Ñ§Ó§Ý§ñ§Ö§Þ §Ó§ã§Ö §à§ã§ä§Ñ§Ó§ê§Ö§Ö§ã§ñ

                dep.expect -= money;       // §°§Ò§ß§à§Ó§Ý§ñ§Ö§Þ §Ü§à§Ý§Ú§é§Ö§ã§ä§Ó§à §à§ã§ä§Ñ§Ó§ê§Ú§ç§ã§ñ §Õ§Ö§ß§Ö§Ô

                break;                     // §£§í§ç§à§Õ§Ú§Þ §Ú§Ù §è§Ú§Ü§Ý§Ñ

            }



            if (gasleft() <= 50000)         // §±§â§à§Ó§Ö§â§ñ§Ö§Þ §Ö§ã§Ý§Ú §Ö§ë§Ö §à§ã§ä§Ñ§Ý§ã§ñ §Ô§Ñ§Ù, §Ú §Ö§ã§Ý§Ú §Ö§Ô§à §ß§Ö§ä, §ä§à §Ó§í§ç§à§Õ§Ú§Þ §Ú§Ù §è§Ú§Ü§Ý§Ñ

                break;                     //  §³§Ý§Ö§Õ§å§ð§ë§Ú§Û §Ó§Ü§Ý§Ñ§Õ§é§Ú§Ü §à§ã§å§ë§Ö§ã§ä§Ó§Ú§ä §Ó§í§á§Ý§Ñ§ä§å §ã§Ý§Ö§Õ§å§ð§ë§Ú§Þ §Ó §à§é§Ö§â§Ö§Õ§Ú

        }



        currentReceiverIndex += i; // §°§Ò§ß§à§Ó§Ý§ñ§Ö§Þ §ß§à§Þ§Ö§â §Õ§Ö§á§à§Ù§Ú§ä§Ñ §ã§ä§Ñ§Ó§ê§Ö§Ô§à §á§Ö§â§Ó§í§Þ §Ó §à§é§Ö§â§Ö§Õ§Ú

    }



    // §±§à§Ü§Ñ§Ù§í§Ó§Ñ§Ö§ä §Ú§ß§æ§à§â§Þ§Ñ§è§Ú§ð §à §Õ§Ö§á§à§Ù§Ú§ä§Ö §á§à §Ö§Ô§à §ß§à§Þ§Ö§â§å (idx), §Þ§à§Ø§ß§à §ã§Ý§Ö§Õ§Ú§ä§î §Ó §â§Ñ§Ù§Õ§Ö§Ý§Ö Read contract

    // §£§í §Þ§à§Ø§Ö§ä§Ö §á§à§Ý§å§é§Ú§ä§î §ß§à§Þ§Ö§â §Õ§Ö§á§à§Ù§Ú§ä§Ñ  (idx) §Ó§í§Ù§Ó§Ñ§Ó §æ§å§ß§Ü§è§Ú§ð getDeposits()

    function getDeposit(uint idx) public view returns (address depositor, uint deposit, uint expect){

        Deposit storage dep = queue[idx];

        return (dep.depositor, dep.deposit, dep.expect);

    }



    // §±§à§Ü§Ñ§Ù§í§Ó§Ñ§Ö§ä §Ü§à§Ý§Ú§é§Ö§ã§ä§Ó§à §Ó§Ü§Ý§Ñ§Õ§à§Ó §à§á§â§Ö§Õ§Ö§Ý§Ö§ß§ß§à§Ô§à §Ú§ß§Ó§Ö§ã§ä§à§â§Ñ

    function getDepositsCount(address depositor) public view returns (uint) {

        uint c = 0;

        for(uint i=currentReceiverIndex; i<queue.length; ++i){

            if(queue[i].depositor == depositor)

                c++;

        }

        return c;

    }



    // §±§à§Ü§Ñ§Ù§í§Ó§Ñ§Ö§ä §Ó§ã§Ö §Õ§Ö§á§à§Ù§Ú§ä§í (index, deposit, expect) §à§á§â§Ö§Õ§Ö§Ý§Ö§ß§ß§à§Ô§à §Ú§ß§Ó§Ö§ã§ä§à§â§Ñ, §Þ§à§Ø§ß§à §ã§Ý§Ö§Õ§Ú§ä§î §Ó §â§Ñ§Ù§Õ§Ö§Ý§Ö Read contract

    function getDeposits(address depositor) public view returns (uint[] idxs, uint128[] deposits, uint128[] expects) {

        uint c = getDepositsCount(depositor);



        idxs = new uint[](c);

        deposits = new uint128[](c);

        expects = new uint128[](c);



        if(c > 0) {

            uint j = 0;

            for(uint i=currentReceiverIndex; i<queue.length; ++i){

                Deposit storage dep = queue[i];

                if(dep.depositor == depositor){

                    idxs[j] = i;

                    deposits[j] = dep.deposit;

                    expects[j] = dep.expect;

                    j++;

                }

            }

        }

    }

    

    // §±§à§Ü§Ñ§Ù§í§Ó§Ñ§Ö§ä §Õ§Ý§Ú§ß§ß§å §à§é§Ö§â§Ö§Õ§Ú, §Þ§à§Ø§ß§à §ã§Ý§Ö§Õ§Ú§ä§î §Ó §â§Ñ§Ù§Õ§Ö§Ý§Ö Read contract

    function getQueueLength() public view returns (uint) {

        return queue.length - currentReceiverIndex;

    }



}